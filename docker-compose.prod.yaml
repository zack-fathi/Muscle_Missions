services:
  auth_server:
    build: ./backend/auth_server
    container_name: auth_server
    volumes:
      - auth_data:/app/var
    env_file:
      - ./backend/auth_server/.env.production
    environment:
      - APP_ENV=production
    expose:
      - "5002"
    restart: unless-stopped

  workouts_server:
    build: ./backend/workout_server
    container_name: workouts_server
    volumes:
      - workouts_data:/app/var
    env_file:
      - ./backend/workout_server/.env.production
    environment:
      - APP_ENV=production
    expose:
      - "5001"
    restart: unless-stopped

  liftbot_server:
    build: ./backend/liftbot_server
    container_name: liftbot_server
    env_file:
      - ./backend/liftbot_server/.env.production
    environment:
      - APP_ENV=production
      - AUTH_SERVER_URL=http://auth_server:5002/api/accounts
      - WORKOUT_SERVER_URL=http://workouts_server:5001/api/workouts
    expose:
      - "5003"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      target: prod  # Use the production target from your multi-stage Dockerfile
    container_name: frontend
    environment:
      - NODE_ENV=production
    expose:
      - "80"   # Expose port 80 internally
    depends_on:
      - auth_server
      - workouts_server
      - liftbot_server
    restart: unless-stopped

  proxy:
    image: jc21/nginx-proxy-manager:latest
    container_name: proxy
    restart: unless-stopped
    ports:
      - "80:80"    # Public HTTP
      - "443:443"  # Public HTTPS
      - "81:81"    # Admin UI
    volumes:
      - ./nginx-proxy-manager/data:/data
      - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend
      - auth_server
      - workouts_server
      - liftbot_server

volumes:
  auth_data:
  workouts_data:
